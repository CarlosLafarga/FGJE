{"version":3,"sources":["webpack:///./node_modules/ngx-pagination/dist/ngx-pagination.js","webpack:///./src/app/pages/membership/membership.component.html","webpack:///./src/app/pages/membership/membership.component.scss","webpack:///./src/app/pages/membership/membership.component.ts","webpack:///./src/app/pages/membership/membership.model.ts","webpack:///./src/app/pages/membership/membership.module.ts","webpack:///./src/app/pages/membership/membership.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA2I;AACpH;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,8sBAA8sB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,oVAAoV,yBAAyB,kCAAkC,cAAc,6IAA6I,4BAA4B,kCAAkC,cAAc,wVAAwV,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AAC9mE,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,sCAAsC,wBAAwB,kCAAkC,qBAAqB,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE;;AAEjrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,gBAAgB,4DAAc;AAC9B,qBAAqB,4DAAc;AACnC,4BAA4B,4DAAc;AAC1C,sBAAsB,4DAAc;AACpC,2BAA2B,4DAAc;AACzC,uBAAuB,4DAAc;AACrC,yCAAyC,4DAAc;AACvD,mCAAmC,4DAAc;AACjD,sCAAsC,4DAAc;AACpD,wBAAwB,6DAAe;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,2BAA2B;AACpC,SAAS,yEAA2B;AACpC,MAAM;AACN;AACA,gBAAgB,4DAAc;AAC9B,qBAAqB,4DAAc;AACnC,wBAAwB,6DAAe;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAi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","file":"app-pages-membership-membership-module.7b372a38b4f7bcc50f6b.js","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\r\n\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n    ]; };\r\n    return PaginatePipe;\r\n}());\r\n\r\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ page.label }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = function () { return []; };\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'directionLinks': [{ type: Input },],\r\n        'autoHide': [{ type: Input },],\r\n        'previousLabel': [{ type: Input },],\r\n        'nextLabel': [{ type: Input },],\r\n        'screenReaderPaginationLabel': [{ type: Input },],\r\n        'screenReaderPageLabel': [{ type: Input },],\r\n        'screenReaderCurrentLabel': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\r\n\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (!this.service.getInstance(this.id).id) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n        { type: ChangeDetectorRef, },\r\n    ]; };\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\r\n\r\nvar NgxPaginationModule = (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaginationModule.ctorParameters = function () { return []; };\r\n    return NgxPaginationModule;\r\n}());\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\r\n","module.exports = \"    <div class=\\\"row mb-1\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"input-group mb-3 box-shadow\\\"> \\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>                   \\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Buscar por Num. de empleado, Nombre(s), Ap. paterno, Ap materno, Usuario ó Agencia\\\" class=\\\"form-control border-0\\\">\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                    <!--\\r\\n                    <span (click)=\\\"openModal(modalContent, null)\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\r\\n                    <span (click)=\\\"toggle('grid')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-th\\\"></i></span>\\r\\n                    -->\\r\\n                    <span (click)=\\\"toggle('list')\\\" class=\\\"input-group-text border-top-0 border-right-0 border-bottom-0\\\"><i class=\\\"fa fa-list\\\"></i></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <button class=\\\"mt-3 btn btn-sm btn-outline-{{spinners ? 'success' : 'danger'}}\\\" (click)=\\\"spinners = !spinners\\\">\\r\\n        Mostrar solo activos - {{spinners ? \\\"SI\\\" : \\\"NO\\\"}}\\r\\n    </button>   -->\\r\\n    <div class=\\\"row mb-1\\\">\\r\\n\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                    <input type=\\\"checkbox\\\"\\r\\n                            class=\\\"custom-control-input checkbox-primary\\\"\\r\\n                            id=\\\"soloActivos\\\"\\r\\n                            (change)=\\\"soloActivos($event)\\\"\\r\\n                            checked=\\\"mostrarActivos\\\"\\r\\n                            name=\\\"soloActivos\\\"\\r\\n                            [(ngModel)]=\\\"mostrarActivos\\\"\\r\\n                    >\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"soloActivos\\\">Mostrar solo usuarios activos</label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-right mb-1 mr-1\\\">\\r\\n            <button *ngIf=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-success mb-1 mr-1\\\" (click)=\\\"openExpPend(expPendientes)\\\">Ver expedientes pendientes</button>\\r\\n            <button *ngIf=\\\"false\\\" type=\\\"button\\\" class=\\\"btn btn-danger mb-1 mr-1\\\" (click)=\\\"openExpPend(expPendientes)\\\">Ver expedientes pendientes</button>\\r\\n        </div>   \\r\\n    </div>\\r\\n\\r\\n    \\r\\n    \\r\\n    <div *ngIf=\\\"type=='list'\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"table-responsive bg-white box-shadow\\\">\\r\\n                <table class=\\\"table table-hover\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Número de empleado</th>\\r\\n                            <th>Nombre(s)</th> \\r\\n                            <th>Apellido paterno</th>\\r\\n                            <th>Apellido materno</th>\\r\\n                            <th>Usuario</th>\\r\\n                            <th>Estatus</th>\\r\\n                            <th>Es MP</th>\\r\\n                            <th>Agencia</th>\\r\\n                            <th>Roles</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                       <!-- <tr *ngFor=\\\"let funcionario of funcionarios | UserSearchPipe : searchText | paginate: { itemsPerPage: 10, currentPage: p }\\\"> -->\\r\\n                        <tr *ngFor=\\\"let funcionario of funcionarios | UserSearchPipe : {cNombreFuncionario: searchText,\\r\\n                                                                                        cApellidoPaternoFuncionario: searchText,\\r\\n                                                                                        cApellidoMaternoFuncionario: searchText,\\r\\n                                                                                        cClaveUsuario: searchText,\\r\\n                                                                                        cNumeroEmpleado: searchText,\\r\\n                                                                                        cNombre: searchText}\\r\\n                                                                    \\r\\n                                                                    | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cNumeroEmpleado }}</td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cNombreFuncionario }}</td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cApellidoPaternoFuncionario }}</td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cApellidoMaternoFuncionario }}</td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cClaveUsuario }}</td>\\r\\n                            <!-- <td class=\\\"align-middle\\\">\\r\\n                                <input *ngIf=\\\"funcionario.bEsActivo === 1\\\"\\r\\n                                        class=\\\"checkbox-success\\\"\\r\\n                                        [ngbTooltip]=\\\"'Activo'\\\"\\r\\n                                        type=\\\"checkbox\\\"\\r\\n                                        id=\\\"checkAct\\\"\\r\\n                                        #activo\\r\\n                                        (change)=\\\"controlActivos($event, funcionario)\\\"\\r\\n                                        checked\\r\\n                                >\\r\\n                                <input *ngIf=\\\"funcionario.bEsActivo != 1\\\"\\r\\n                                        class=\\\"checkbox-danger\\\"\\r\\n                                        [ngbTooltip]=\\\"'Inactivo'\\\"\\r\\n                                        type=\\\"checkbox\\\"\\r\\n                                        id=\\\"checkInact\\\"\\r\\n                                        #inactivo\\r\\n                                        (change)=\\\"controlInactivo($event, funcionario)\\\"\\r\\n                                >\\r\\n                            </td> -->\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <i *ngIf=\\\"funcionario.bEsActivo === 1\\\" class=\\\"fa fa-user mr-2 text-success\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'Activo, haga clic para desactivar'\\\" (click)=\\\"controlActivos(funcionario)\\\"></i>\\r\\n                                <i *ngIf=\\\"funcionario.bEsActivo != 1\\\" class=\\\"fa fa-user mr-2 text-danger\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'Inactivo, haga clic para activar'\\\" (click)=\\\"controlInactivo(funcionario)\\\"></i>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <i *ngIf=\\\"funcionario.esMP === 1\\\" class=\\\"fa fa-check mr-2 text-success\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'Es MP'\\\"></i>\\r\\n                                <i *ngIf=\\\"funcionario.esMP != 1\\\" class=\\\"fa fa-close mr-2 text-danger\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'No es MP'\\\"></i>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">{{ funcionario.cNombre }}</td>\\r\\n                            <td><button #ver value=\\\"{{funcionario.iClaveFuncionario}}\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"llamarRoles(ver.value)\\\">Ver Roles</button></td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n                                    <button [disabled]=\\\"funcionario.bEsActivo != 1\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"openModal(modalContent, funcionario)\\\"><i class=\\\"fa fa-check\\\"></i></button>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"row mb-4\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"bg-white text-center\\\">\\r\\n                <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" previousLabel=\\\"Anterior\\\" nextLabel=\\\"Siguiente\\\"></pagination-controls>\\r\\n            </div>        \\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <ng-template #modalContent>\\r\\n        <div class=\\\"modal-body bg-gray\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 vertical-tabs\\\">\\r\\n                    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"row px-3\\\" #datos2=\\\"ngForm\\\">\\r\\n                        <ul class=\\\"nav flex-column left col-2 border-0 rounded-0 mr-0 bg-light\\\">              \\r\\n                            <li class=\\\"nav-item bg-light\\\">\\r\\n                                <a class=\\\"nav-link active\\\" href=\\\"#reubicarFuncionario\\\" data-toggle=\\\"tab\\\">Reubicar funcionario</a>\\r\\n                            </li>\\r\\n                            <li class=\\\"nav-item bg-light\\\">\\r\\n                                <a *ngIf=\\\"valReasignarExpedientes\\\" class=\\\"nav-link\\\" href=\\\"#reasignarExpedientes\\\" data-toggle=\\\"tab\\\">Reasignar expedientes</a>\\r\\n                                <a *ngIf=\\\"!valReasignarExpedientes\\\" class=\\\"nav-link disabled\\\" href=\\\"#reasignarExpedientes\\\" data-toggle=\\\"tab\\\">Reasignar expedientes</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <div class=\\\"tab-content col-10 border-0\\\">\\r\\n\\r\\n                            <div class=\\\"tab-pane active\\\" id=\\\"reubicarFuncionario\\\">\\r\\n                                <div class=\\\"card\\\">\\r\\n                                    <div class=\\\"card-body\\\">\\r\\n                                        <h5 class=\\\"card-title mb-0\\\">Reubicar funcionario</h5>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"container\\\">\\r\\n                                        <label class=\\\"text-gray\\\">Nombre del funcionario seleccionado:</label>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <label class=\\\"text-gray\\\">Nombre</label>\\r\\n                                                    <input formControlName=\\\"cNombreFuncionario\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <label class=\\\"text-gray\\\">Apellido paterno</label>\\r\\n                                                    <input formControlName=\\\"cApellidoPaternoFuncionario\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <label class=\\\"text-gray\\\">Apellido materno</label>\\r\\n                                                    <input formControlName=\\\"cApellidoMaternoFuncionario\\\" class=\\\"form-control\\\" type=\\\"text\\\" readonly>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                            <input class=\\\"form-control\\\" type=\\\"hidden\\\" value=\\\"{{count}}\\\" >\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        \\r\\n                                        <hr>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                                        <input fomControlName=\\\"pendientes\\\"\\r\\n                                                                type=\\\"checkbox\\\"\\r\\n                                                                class=\\\"custom-control-input checkbox-primary\\\"\\r\\n                                                                id=\\\"expedientesPendientes\\\"\\r\\n                                                                (change)=\\\"pendientesCheck($event)\\\"\\r\\n                                                                [disabled]=\\\"!valExpPendCheck\\\">\\r\\n                                                        <label class=\\\"custom-control-label\\\" for=\\\"expedientesPendientes\\\">Expedientes pendientes</label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <!-- <pre>{{ pendientes }}</pre> -->\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                                        <input fomControlName=\\\"esMP\\\"\\r\\n                                                                type=\\\"checkbox\\\"\\r\\n                                                                class=\\\"custom-control-input checkbox-primary\\\"\\r\\n                                                                id=\\\"EsMP\\\"\\r\\n                                                                (change)=\\\"esMPCheck($event)\\\"\\r\\n                                                                [disabled]=\\\"!valEsMPCheck\\\"\\r\\n                                                                [checked]=\\\"funcionario.esMP === 1\\\">\\r\\n                                                        <label class=\\\"custom-control-label\\\" for=\\\"EsMP\\\">es MP</label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <!-- <pre>{{ esMP }}</pre> -->\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                                        <input fomControlName=\\\"soloRoles\\\"\\r\\n                                                                type=\\\"checkbox\\\"\\r\\n                                                                class=\\\"custom-control-input checkbox-primary\\\"\\r\\n                                                                id=\\\"SoloRoles\\\"\\r\\n                                                                (change)=\\\"soloRolesCheck($event)\\\"\\r\\n                                                                [disabled]=\\\"!valSolocambioCheck\\\">\\r\\n                                                        <label class=\\\"custom-control-label\\\" for=\\\"SoloRoles\\\">Solo cambio de roles</label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <!-- <pre>{{ soloRoles }}</pre> -->\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <hr>\\r\\n                                        <!-- [(ngModel)]=\\\"catDiscriminante_id\\\" -->\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"catDiscriminante_id\\\">Nueva agencia:</label>\\r\\n                                            <select *ngIf=\\\"valAgenciaSelect\\\"\\r\\n                                                    class=\\\"form-control custom-select\\\"\\r\\n                                                    id=\\\"catDiscriminante_id\\\"\\r\\n                                                    formControlName=\\\"catDiscriminante_id\\\"\\r\\n                                                    (change)=\\\"getCatUIE($event.target.value)\\\"\\r\\n                                                    [disabled]=\\\"valAgenciaSelect\\\">\\r\\n                                                <option selected>-- Seleccione una agencia --</option>\\r\\n                                                <option *ngFor=\\\"let agencia of agencias\\\" [value]=\\\"agencia.catDiscriminante_id\\\">{{ agencia.cClaveDiscriminante }} - {{ agencia.cNombre }}</option>\\r\\n                                            </select><br><br>\\r\\n                                            \\r\\n                                            <input fromControlName=\\\"catUIE_id\\\" class=\\\"form-control\\\" type=\\\"hidden\\\" [value]=\\\"r.catUIE_id\\\" readonly id=\\\"catUIE_id\\\" *ngFor=\\\"let r of catUIE\\\">\\r\\n                                            <input fromControlName=\\\"clavefunciAgenciaNueva\\\" class=\\\"form-control\\\" type=\\\"hidden\\\" [value]=\\\"\\\" readonly id=\\\"clavefunciAgenciaNueva\\\" >\\r\\n                                        </div>\\r\\n\\r\\n                                        <hr>\\r\\n\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-xl-5 col-lg-6 mb-4\\\">\\r\\n                                                <table class=\\\"table table-hover\\\">\\r\\n                                                    <thead>\\r\\n                                                        <tr>\\r\\n                                                            <!-- <th>Id</th> -->\\r\\n                                                            <th>Roles</th>\\r\\n                                                        </tr>\\r\\n                                                    </thead>\\r\\n                                                    <tbody>\\r\\n                                                        <tr *ngFor=\\\"let r of roles | paginate: { itemsPerPage: 10,\\r\\n                                                                                                currentPage: p2,\\r\\n                                                                                                id:'roles'\\r\\n                                                                                                 }\\\"\\r\\n                                                            (click)=\\\"onSelectRol(r)\\\"\\r\\n                                                            [ngClass] = \\\"{ 'highlight' : r.rol_id === selectedRol }\\\">\\r\\n                                                            <!-- <th scope=\\\"row\\\">{{ r.rol_id }}</th> -->\\r\\n                                                            <td>{{ r.cDescripcionRol }}</td>\\r\\n                                                        </tr>\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n\\r\\n                                                <div class=\\\"row mb-4\\\">\\r\\n                                                    <div class=\\\"col-12\\\">\\r\\n                                                        <div class=\\\"bg-white text-center\\\">\\r\\n                                                            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p2 = $event\\\" id='roles' maxSize=\\\"10\\\" previousLabel=\\\"\\\" nextLabel=\\\"\\\"></pagination-controls>\\r\\n                                                        </div>        \\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-xl-2 col-lg-6 mb-4\\\">\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"agregarRol()\\\" [ngbTooltip]=\\\"'Agregar rol'\\\"> <i class=\\\"fa fa-long-arrow-right\\\"></i> </button> <br>\\r\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"quitarRol()\\\" [ngbTooltip]=\\\"'Quitar rol'\\\"> <i class=\\\"fa fa-long-arrow-left\\\"></i> </button>\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"col-xl-5 col-lg-6 mb-4\\\">\\r\\n                                                \\r\\n                                                <table class=\\\"table table-hover\\\">\\r\\n                                                    <thead>\\r\\n                                                        <tr>\\r\\n                                                            <!-- <th>Id</th> -->\\r\\n                                                            <th>Roles</th>\\r\\n                                                            <th>Principal</th>\\r\\n                                                        </tr>\\r\\n                                                    </thead>\\r\\n                                                    <tbody>\\r\\n\\r\\n                                                        <!-- <tr *ngFor=\\\"let fRol of funcionarioRol | paginate: { itemsPerPage: 10, currentPage: p3, id:'rolesFuncionario' }\\\" (click)=\\\"onSelectFRolF(fRol)\\\"\\r\\n                                                            [ngClass]=\\\"{'highlight': fRol.rol_id == selectedRolF}\\\">\\r\\n                                                            <th scope=\\\"row\\\">{{ fRol.rol_id }}</th>\\r\\n                                                            <td>{{ fRol.cDescripcionRol }}</td>\\r\\n                                                            <td> <input type=\\\"radio\\\" name=\\\"esPrincipal\\\" class=\\\"radio-dark-gray\\\" id=\\\"\\\"> </td>\\r\\n                                                        </tr> -->\\r\\n\\r\\n                                                        <tr *ngFor=\\\"let rol of funcionarioRol | paginate: { itemsPerPage: 10, currentPage: p3, id:'rolesFuncionario' }\\\" (click)=\\\"onSelectFRolF(rol)\\\"\\r\\n                                                            [ngClass]=\\\"{ 'highlight': rol.rol_id === selectedRolF }\\\">\\r\\n                                                            <!-- <th scope=\\\"row\\\">{{ rol.rol_id }}</th> -->\\r\\n                                                            <td>{{ rol.cDescripcionRol }}</td>\\r\\n                                                            <td> <input type=\\\"radio\\\"  name=\\\"esPrincipal\\\" class=\\\"radio-dark-gray\\\"  [checked]=\\\"rol.esPrincipal === 1\\\" id=\\\"rol.rol_id\\\"> </td>\\r\\n                                                            <!-- <td>\\r\\n                                                                <input type=\\\"radio\\\" name=\\\"puesto_val\\\" formControlName=\\\"puesto_val\\\"  class=\\\"radio-dark-gray\\\" [(ngModel)]=\\\"puesto_val\\\" [value]=\\\"rol.rol_id\\\" required>\\r\\n                                                                <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('puesto_val').hasError('required')\\\">Por favor seleccione el rol principal</small>\\r\\n                                                            </td> -->\\r\\n                                                        </tr>\\r\\n\\r\\n                                                    </tbody>\\r\\n                                                </table>\\r\\n\\r\\n                                                <!-- <pre>{{ puesto_val | json }}</pre> -->\\r\\n                                                \\r\\n                                                <div class=\\\"row mb-4\\\">\\r\\n                                                    <div class=\\\"col-12\\\">\\r\\n                                                        <div class=\\\"bg-white text-center\\\">\\r\\n                                                            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p3 = $event\\\" id='rolesFuncionario' maxSize=\\\"10\\\" previousLabel=\\\"\\\" nextLabel=\\\"\\\"></pagination-controls>\\r\\n                                                        </div>        \\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                \\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"tab-pane\\\" id=\\\"reasignarExpedientes\\\">\\r\\n                                <div class=\\\"card\\\">                        \\r\\n                                    <div class=\\\"card-body\\\">\\r\\n                                        <h5 class=\\\"card-title mb-0\\\">Reasignar expedientes en agencia actual: <small>{{ nombreAgActual }}</small></h5>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"container\\\">\\r\\n                                        <div id=\\\"accordion\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\r\\n\\r\\n                                            <!-- <div class=\\\"card border-0\\\">\\r\\n                                                <div class=\\\"card-header transparent\\\" role=\\\"tab\\\" id=\\\"headingOne\\\">\\r\\n                                                    <h6 class=\\\"mb-0\\\">\\r\\n                                                        <a class=\\\"text-primary\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\r\\n                                                            Titular de la agencia\\r\\n                                                        </a>\\r\\n                                                    </h6>\\r\\n                                                </div>\\r\\n                    \\r\\n                                                <div id=\\\"collapseOne\\\" class=\\\"collapse show\\\" data-parent=\\\"#accordion\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingOne\\\">\\r\\n                                                    <div class=\\\"card-body\\\">\\r\\n                                                        <h6>Nombre del funcionario titular de la agencia: </h6>\\r\\n                                                        <p>(mostrar el nombre del titular de la agencia)</p> \\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div> -->\\r\\n\\r\\n                                            <div class=\\\"card border-0\\\">\\r\\n                                                <div class=\\\"card-header transparent\\\" role=\\\"tab\\\" id=\\\"headingTwo\\\">\\r\\n                                                    <h6 class=\\\"mb-0\\\">\\r\\n                                                        <a class=\\\"text-primary\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n                                                            Funcionarios\\r\\n                                                        </a>\\r\\n                                                    </h6>\\r\\n                                                </div>\\r\\n                                                <div id=\\\"collapseTwo\\\" class=\\\"collapse show\\\" data-parent=\\\"#accordion\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingTwo\\\">\\r\\n                                                    <div class=\\\"card-body\\\">\\r\\n                                                        <div class=\\\"input-group mb-2 box-shadow\\\">\\r\\n                                                            <span class=\\\"input-group-prepend\\\">\\r\\n                                                                <span class=\\\"input-group-text\\\">\\r\\n                                                                    <i class=\\\"fa fa-search\\\"></i>\\r\\n                                                                </span>\\r\\n                                                            </span>\\r\\n                                                            <input type=\\\"text\\\" [(ngModel)]=\\\"buscarFuncionario\\\" formControlName=\\\"cNumeroCertificado\\\" placeholder=\\\"Buscar...\\\" class=\\\"form-control\\\">\\r\\n                                                        </div>\\r\\n                                                        <table class=\\\"table table-hover\\\">\\r\\n                                                            <thead>\\r\\n                                                                <tr>\\r\\n                                                                    <th>Número de empleado</th>\\r\\n                                                                    <th>Nombre</th>\\r\\n                                                                    <th>Apellido paterno</th>\\r\\n                                                                    <th>Apellido materno</th>\\r\\n                                                                    <!-- <th>Nombre Agencia</th> -->\\r\\n                                                                    <th>Titular</th>\\r\\n                                                                    <th></th>\\r\\n                                                                </tr>\\r\\n                                                            </thead>\\r\\n                                                            <tbody>\\r\\n                                                                <tr *ngFor=\\\"let funagen of funciAgencia | FuncionarioSearchPipe : { cNumeroEmpleado: buscarFuncionario,\\r\\n                                                                                                                                    cNombreFuncionario: buscarFuncionario,\\r\\n                                                                                                                                    cApellidoPaternoFuncionario: buscarFuncionario,\\r\\n                                                                                                                                    cApellidoMaternoFuncionario: buscarFuncionario } | paginate: { itemsPerPage: 10, currentPage: p4, id:'FuncionarioAgencia' }\\\">\\r\\n                                                                    <td scope=\\\"row\\\">{{ funagen.cNumeroEmpleado }}</td>\\r\\n                                                                    <td>{{ funagen.cNombreFuncionario }}</td>\\r\\n                                                                    <td>{{ funagen.cApellidoPaternoFuncionario }}</td>\\r\\n                                                                    <td>{{ funagen.cApellidoMaternoFuncionario }}</td>\\r\\n                                                                    <!-- <td>{{ funagen.cNombre }}</td>  -->\\r\\n                                                                    <td>\\r\\n                                                                        <i *ngIf=\\\"funagen.esMP === 1\\\" class=\\\"fa fa-check mr-2 text-success\\\" placement=\\\"bottom\\\"></i>\\r\\n                                                                        <i *ngIf=\\\"funagen.esMP != 1\\\" class=\\\"fa fa-close mr-2 text-danger\\\" placement=\\\"bottom\\\"></i>\\r\\n                                                                    </td>\\r\\n                                                                    <td ><input type=\\\"radio\\\" name=\\\"archivoDigital_id\\\" formControlName=\\\"archivoDigital_id\\\"  class=\\\"radio-dark-gray\\\" [(ngModel)]=\\\"archivoDigital_id\\\" [value]=\\\"funagen.iClaveFuncionario\\\"> </td>\\r\\n                                                                </tr>\\r\\n                                                            </tbody>\\r\\n                                                        </table>\\r\\n\\r\\n                                                        <div class=\\\"row mb-4\\\">\\r\\n                                                            <div class=\\\"col-12\\\">\\r\\n                                                                <div class=\\\"bg-white text-center\\\">\\r\\n                                                                    <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p4 = $event\\\" id='FuncionarioAgencia' maxSize=\\\"10\\\" previousLabel=\\\"\\\" nextLabel=\\\"\\\"></pagination-controls>\\r\\n                                                                </div>        \\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- <pre>\\r\\n                                {{ roles | json }}\\r\\n                            </pre>  -->\\r\\n                            <!-- <pre>\\r\\n                                {{ funcionarioRol | json }}\\r\\n                            </pre> -->\\r\\n                            <!-- <pre>\\r\\n                                   {{ form.value | json }}\\r\\n                            </pre> -->\\r\\n                                  \\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12 bg-white py-1\\\">\\r\\n                            <div *ngIf=\\\"form.get('cRFC').hasError('required')\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\r\\n                                <strong>Atencion!</strong> Por favor ingrese la justificación.\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"justificacion\\\">justificación</label>\\r\\n                                <textarea id=\\\"justificacion\\\" class=\\\"form-control\\\" formControlName=\\\"cRFC\\\" required></textarea>\\r\\n                                <!-- <textarea id=\\\"justificacion\\\" class=\\\"form-control\\\" formControlName=\\\"cRFC\\\" [(ngModel)]=\\\"cRFC\\\" required></textarea> -->\\r\\n                                <!-- <small class=\\\"text-danger\\\" *ngIf=\\\"form.get('cRFC').touched && form.get('cRFC').hasError('required')\\\">Por favor ingrese la justificación</small> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12 bg-white text-center py-1\\\">\\r\\n                            <button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-success mr-1\\\">Aceptar</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Cancelar</button>\\r\\n                        </div>  \\r\\n                    </form> \\r\\n                </div>\\r\\n            </div>    \\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #expPendientes>\\r\\n        <div class=\\\"modal-body bg-gray\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <form [formGroup]=\\\"formExpPend\\\" (ngSubmit)=\\\"onSubmitExpPend(formExpPend.value)\\\" class=\\\"row px-3\\\" #datos=\\\"ngForm\\\">\\r\\n\\r\\n                        <div class=\\\"card col-12\\\">\\r\\n                            <div class=\\\"card-header transparent border-0 text-muted\\\">\\r\\n                                <h4 class=\\\"modal-title\\\">Expedientes pendientes</h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body\\\">\\r\\n\\r\\n                                <div class=\\\"container\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-10\\\">\\r\\n\\r\\n                                            <table class=\\\"table table-hover\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th>Nombre del funcionario</th>\\r\\n                                                        <th>Agencia</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let expPend of expPendientesLista | paginate: { itemsPerPage: 10, currentPage: p5, id:'ExpPendientes' }\\\" (click)=\\\"onSelectExpPend(expPend)\\\"\\r\\n                                                        [ngClass]=\\\"{ 'highlight': expPend.cambioAdscripcionExp_id === selectedExpPend }\\\">\\r\\n                                                        <td class=\\\"align-middle text-truncate\\\">{{ expPend.nombreFuncionario }}</td>\\r\\n                                                        <td class=\\\"align-middle text-truncate\\\">{{ expPend.cNombre }}</td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n\\r\\n                                            <div class=\\\"row mb-4\\\">\\r\\n                                                <div class=\\\"col-12\\\">\\r\\n                                                    <div class=\\\"bg-white text-center\\\">\\r\\n                                                        <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p5 = $event\\\" id='ExpPendientes' maxSize=\\\"10\\\" previousLabel=\\\"\\\" nextLabel=\\\"\\\"></pagination-controls>\\r\\n                                                    </div>        \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"iclaveFuncionarioAsign\\\">Selccione el funcionario de la agencia</label>\\r\\n                                                <select class=\\\"form-control custom-select\\\"\\r\\n                                                        id=\\\"iclaveFuncionarioAsign\\\"\\r\\n                                                        formControlName=\\\"iclaveFuncionarioAsign\\\"\\r\\n                                                        [(ngModel)]=\\\"iclaveFuncionarioAsign\\\"\\r\\n                                                        required>\\r\\n                                                    <option selected>-- Seleccione un funcionario --</option>\\r\\n                                                    <option *ngFor=\\\"let funsAg of funcinariosAgencia\\\" [value]=\\\"funsAg.iClaveFuncionario\\\">{{ funsAg.cNombreFuncionario }} {{ funsAg.cApellidoPaternoFuncionario }} {{ funsAg.cAPellidoMaternoFuncionario }}</option>\\r\\n                                                </select>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-12 bg-white text-center py-2\\\">\\r\\n                            <button [disabled]=\\\"!formExpPend.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-success mr-1\\\">Aceptar</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModalExpPend()\\\">Cancelar</button>\\r\\n                        </div> \\r\\n\\r\\n                    </form>            \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\"","module.exports = \".flip {\\n  width: 100%;\\n  height: 180px;\\n  position: relative;\\n  -webkit-perspective: 800px;\\n  -o-perspective: 800px;\\n  perspective: 800px; }\\n  .flip .content {\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    transition: -webkit-transform 0.6s;\\n    transition: transform 0.6s;\\n    transition: transform 0.6s, -webkit-transform 0.6s;\\n    -webkit-transform-style: preserve-3d;\\n    transform-style: preserve-3d; }\\n  .flip .content div.front, .flip .content div.back {\\n      height: 100%;\\n      width: 100%;\\n      position: absolute;\\n      z-index: 0;\\n      -webkit-backface-visibility: hidden;\\n      backface-visibility: hidden; }\\n  .flip .content div.front .card, .flip .content div.back .card {\\n        height: 180px; }\\n  .flip .content div.back {\\n      z-index: 1;\\n      -webkit-transform: rotateY(180deg);\\n      transform: rotateY(180deg); }\\n  .flip .content div.back .dropdown {\\n        width: 100%; }\\n  .flip .content div.back .dropdown .dropdown-menu {\\n          width: 100%;\\n          margin-top: -1px; }\\n  .flip .content div.back .dropdown .dropdown-menu a {\\n            color: #666; }\\n  .flip .content div.back .dropdown .dropdown-menu a .fa-check {\\n              color: #378D3B; }\\n  .flip .content div.back .dropdown .dropdown-menu a .fa-times {\\n              color: #D22E2E; }\\n  .flip .content.flipped {\\n      -webkit-transform: rotateY(180deg);\\n      transform: rotateY(180deg); }\\n  .z-index-1 {\\n  z-index: 1; }\\n  table tr.highlight {\\n  background-color: #4CAF50 !important;\\n  color: #ffffff; }\\n\"","import { Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators, NgForm} from '@angular/forms';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\nimport { NgbModal, NgbModalRef, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User, UserProfile, UserWork, UserContacts, UserSocial, UserSettings, FuncionariosData, Roles, Agencias, FuncionarioUsuarioRol, FunciAgencia, catUIE, CambioAdscripcion, ExpPendientes, AsignarPendientes, cambioEstatus } from './membership.model';\r\nimport { MembershipService } from './membership.service';\r\nimport { MenuService } from '../../theme/components/menu/menu.service';\r\nimport { gridSize } from '../../../../node_modules/@swimlane/ngx-charts';\r\nimport { RouteConfigLoadStart, Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nimport { Location } from '@angular/common';\r\nimport { $ } from 'protractor';\r\n \r\n@Component({\r\n  selector: 'app-membership',\r\n  templateUrl: './membership.component.html',\r\n  styleUrls: ['./membership.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MembershipService, MenuService ]\r\n})\r\nexport class MembershipComponent implements OnInit {\r\n\r\n  public router: Router;\r\n  public titularAgencia: string;\r\n  public buscarFuncionario: string;\r\n  public menuItems: Array<any>;  \r\n  public cambioAdscripcion : CambioAdscripcion[];\r\n  public adscripcion : CambioAdscripcion;\r\n  public funcionarios: FuncionariosData[] = [];\r\n  public funcionario: FuncionariosData;\r\n  public roles: Roles[] = [];\r\n  public funcionarioRol: Roles[] = [];\r\n  public count : number;\r\n  public agencias: Agencias[] = [];\r\n  public agencia: Agencias;\r\n  public users: User[];\r\n  public user: User;\r\n  public searchText: string;\r\n  public p: any;\r\n  public type: string = 'list';\r\n  public modalRef: NgbModalRef;\r\n  public modalExpPend: NgbModalRef;\r\n  public form: FormGroup;\r\n  public formExpPend: FormGroup;\r\n  public genders = ['male', 'female'];\r\n  public genderOption: string;\r\n  public selectedRol: number = 0;\r\n  public selectedRolF: number = 0;\r\n  public addRol: Roles;\r\n  public delRol: Roles;\r\n  public posicionRol: number = 0;\r\n  public posicionRolF: number = 0;\r\n  public funciAgencia: FunciAgencia[] = [];\r\n  public catUIE: catUIE[] = [];\r\n  public val: number[] = [];\r\n  public funciMP:FuncionariosData[] = [];\r\n  public clavedelactaul :number[] = [];\r\n  public cambio : any[];\r\n  public expPendientes: boolean = false;\r\n  public esMP: boolean = false;\r\n  public soloRoles: boolean = false;\r\n  public pendientesNum: number;\r\n  public esMPNum: number;\r\n  public soloRolesNum: number;\r\n  public esPrincipal: number;\r\n  public cambioEstatus1: cambioEstatus[];\r\n  public mostrarActivos: boolean = true;\r\n \r\n  public menuSelectSettings: IMultiSelectSettings = {\r\n      enableSearch: true,\r\n      checkedStyle: 'fontawesome',\r\n      buttonClasses: 'btn btn-secondary btn-block',\r\n      dynamicTitleMaxItems: 0,\r\n      displayAllSelectedText: true,\r\n      showCheckAll: true,\r\n      showUncheckAll: true\r\n  };\r\n  public menuSelectTexts: IMultiSelectTexts = {\r\n      checkAll: 'Select all',\r\n      uncheckAll: 'Unselect all',\r\n      checked: 'menu item selected',\r\n      checkedPlural: 'menu items selected',\r\n      searchPlaceholder: 'Find menu item...',\r\n      defaultTitle: 'Select menu items for user',\r\n      allSelected: 'All selected',\r\n  };\r\n  public menuSelectOptions: IMultiSelectOption[] = [];\r\n  \r\n  constructor(router: Router,\r\n              public fbf: FormBuilder,\r\n              public fbExpPend: FormBuilder,\r\n              public toastrService: ToastrService,\r\n              public membershipService: MembershipService,\r\n              public menuService: MenuService, \r\n              public modalService: NgbModal,\r\n              public location: Location) {\r\n\r\n    this.router = router;\r\n\r\n    this.menuItems = this.menuService.getVerticalMenuItems();\r\n    this.menuItems.forEach(item=>{\r\n      let menu = { \r\n        id: item.id, \r\n        name: item.title\r\n      }\r\n      this.menuSelectOptions.push(menu);\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getFuncionarios();\r\n    console.log(this.funcionarios);\r\n\r\n    this.getAgencias();\r\n    console.log(this.agencias);\r\n\r\n    this.getRoles();\r\n    console.log(this.roles);\r\n\r\n    this.formExpPend =  this.fbExpPend.group({\r\n      cambioAdscripcion_id: null,\r\n      iclaveFuncionario: null,\r\n      catDis_ant: null,\r\n      catDis_asignado: null,\r\n      fecha_creacion: null,\r\n      fecha_modificacion: null,\r\n      esEmp: null,\r\n      Asignados: null,\r\n      iclaveFuncionarioAsign: null\r\n    });\r\n    \r\n    this.form = this.fbf.group({\r\n      iClaveFuncionario: null,\r\n      cNombreFuncionario: null,\r\n      cApellidoPaternoFuncionario: null,\r\n      cApellidoMaternoFuncionario: null,\r\n      cSexo: null,\r\n      cRFC: null,\r\n      cCURP: null,\r\n      dFechaNacimiento: null,\r\n      cEmail: null,\r\n      cCedula: null,\r\n      iClaveFuncionarioJefe: null,\r\n      especialidad_val: null,\r\n      puesto_val: null,\r\n      jerarquiaOrganizacional_id: null,\r\n      dcCargaTrabajo: null,\r\n      tipoEspecialidad_val: null,\r\n      bEsPar: null,\r\n      cNumeroEmpleado: null,\r\n      catDiscriminante_id: null,\r\n      dFechaIngreso: null,\r\n      archivoDigital_id: null,\r\n      catUIE_id: null,\r\n      catAreasNegocio_id: null,\r\n      esMP: null,\r\n      cNumeroCertificado: null,\r\n      bEsActivo: null,\r\n      cClaveUsuario: null,\r\n      cNombre: null,\r\n      usuario: null,\r\n      numeroExpediente: null\r\n    });\r\n  }\r\n\r\n  public rev: boolean = true;\r\n  public controlActivos(funcionario) {\r\n\r\n    swal({\r\n      title: 'Desactivar usuario',\r\n      text: '¿Esta seguro que desea desactivar al usuario?',\r\n      type: 'warning',\r\n      html: '<b>¿Esta seguro que desea desactivar al usuario?</b><br><label><b>Justificacion:</b></label>',\r\n      input: 'text',\r\n      inputValidator: (value) => {\r\n        return !value && 'Por favor ingrese la justificacion.'\r\n       },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Desactivar',\r\n      cancelButtonText: 'Cancelar'\r\n\r\n    }).then((result) => {\r\n\r\n      console.log(result.value);\r\n\r\n      if (result.value) {\r\n        // const act = e.target.checked;\r\n        const valor: number = 0;\r\n        console.log(funcionario);\r\n        funcionario.bEsActivo = 0;\r\n        console.log(\"Se desactiva el funcionario => \" + funcionario.cNombreFuncionario );\r\n        console.log(valor);\r\n        var justificacion = result.value;\r\n        var iclaveFuncionarionew = funcionario.iClaveFuncionario;\r\n\r\n        let cambioEstatus1 = new cambioEstatus(iclaveFuncionarionew, valor, justificacion);\r\n        this.cambioEstatus( cambioEstatus1 );\r\n        \r\n        swal({\r\n          title:\"Usuario desactivado'\",\r\n          text: \"Desactivacion exitosa\",\r\n          type: \"success\"\r\n          }).then(() =>{\r\n          \r\n          //  location.reload();\r\n          });\r\n      } else if (result.dismiss === swal.DismissReason.cancel) {\r\n        console.log(\"Se cancelo la desactivación\" + result)\r\n        this.rev = true; \r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  public controlInactivo(funcionario) {\r\n\r\n    swal({\r\n      title: 'Activar usuario',\r\n      text: '¿Esta seguro que desea activar al usuario?',\r\n      type: 'warning',\r\n      html: '<b>¿Esta seguro que desea Activar al usuario?</b><br><label><b>Justificacion:</b></label>',\r\n      input: 'text',\r\n      inputValidator: (value) => {\r\n        return !value && 'Por favor ingrese la justificacion.'\r\n       },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Activar',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n\r\n      console.log(result.value);\r\n\r\n      if (result.value) {\r\n        // const inact = e.target.checked;\r\n        const valor: number = 1;\r\n        console.log(funcionario);\r\n        funcionario.bEsActivo = 1;\r\n        console.log(\"Se activa el funcionario => \" + funcionario.cNombreFuncionario);\r\n        console.log(valor);\r\n        var justificacion = \"\";\r\n        var iclaveFuncionarionew = funcionario.iClaveFuncionario;\r\n\r\n\r\n        let cambioEstatus1 = new cambioEstatus(iclaveFuncionarionew,valor,justificacion);\r\n        this.cambioEstatus(cambioEstatus1);\r\n        swal({\r\n          title:\"Usuario Activado\",\r\n          text: \"Activacion exitosa\",\r\n          type: \"success\"\r\n          }).then(() =>{\r\n          \r\n          //  location.reload();\r\n          });\r\n      } else if (result.dismiss === swal.DismissReason.cancel) {\r\n        console.log(\"Se cancelo la activación\")\r\n      \r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  pageRefresh() {\r\n    this.form.reset();\r\n    this.router.navigate(['/pages/membership']);\r\n    // location.reload();\r\n  }\r\n\r\n  public valReasignarExpedientes: boolean = true;\r\n  public valExpPendCheck: boolean = true;\r\n  public valEsMPCheck: boolean = true;\r\n  public valSolocambioCheck: boolean = true;\r\n  public valAgenciaSelect: boolean = true;\r\n\r\n  public pendientesCheck( e ) {\r\n    this.expPendientes = e.target.checked;\r\n    if (this.expPendientes) {\r\n      this.valReasignarExpedientes = false;\r\n      this.valSolocambioCheck = false;\r\n    } else {\r\n      this.valReasignarExpedientes = true;\r\n      this.valSolocambioCheck = true;\r\n    }\r\n  }\r\n\r\n  public esMPCheck( e ) {\r\n    this.esMP = e.target.checked;\r\n    if (this.esMP) {\r\n      this.valSolocambioCheck = false;\r\n    } else {\r\n      this.valSolocambioCheck = true\r\n    }\r\n  }\r\n\r\n  public soloRolesCheck( e ) {\r\n    this.soloRoles = e.target.checked;\r\n    if (this.soloRoles) {\r\n      this.valReasignarExpedientes = false;\r\n      this.valExpPendCheck = false;\r\n      this.valEsMPCheck = false;\r\n      this.valAgenciaSelect = false;\r\n    } else {\r\n      this.valReasignarExpedientes = true;\r\n      this.valExpPendCheck = true;\r\n      this.valEsMPCheck = true;\r\n      this.valAgenciaSelect = true;\r\n    }\r\n    //this.checkEPyMP = null;\r\n  }\r\n\r\n  public searchActivos: string = \"1\"\r\n\r\n  public soloActivos( e ) {\r\n    this.mostrarActivos = e.target.checked\r\n    if (this.mostrarActivos) {\r\n      this.searchActivos = \"1\";\r\n      console.log(this.searchActivos);\r\n    } else if(!this.mostrarActivos) {\r\n      this.searchActivos = \"\"\r\n      console.log(this.searchActivos);\r\n    }\r\n  }\r\n\r\n  public llamarRoles( clave:number){\r\n    var names = \"\";\r\n    this.membershipService.getFUsuarioRol(clave).subscribe( funcionarioRol => {\r\n      this.funcionarioRol = funcionarioRol\r\n      //console.log(this.funcionarioRol);\r\n      var roles  = JSON.stringify(this.funcionarioRol);\r\n\r\n      for(var i = 0; i<funcionarioRol.length; i++){\r\n        names += \"<b>\" + funcionarioRol[i].cDescripcionRol + \"</b><br>\";\r\n        //console.log(names);\r\n      }\r\n      //console.log(names);\r\n      \r\n      swal({\r\n        title: \"<b>Roles Del Funcionario</b>\", \r\n        html: \"<b>\" + names + \"</b><br>\",  \r\n        confirmButtonText: \"Aceptar\", \r\n        confirmButtonColor: \"#4BAE4F\",\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n\r\n  // Se cargan los datos del funcionario\r\n  public getFuncionarios(): void {\r\n    this.membershipService.getFuncionarios().subscribe( funcionarios => {\r\n      this.funcionarios = funcionarios\r\n      console.log(this.funcionarios);\r\n\r\n      // for (let j = 0; j < this.funcionarios.length; j++) {\r\n\r\n      //   this.cargarRoles(this.funcionarios[j].iClaveFuncionario);\r\n\r\n      //   this.funcionarios[j].usuario.push();\r\n      // }\r\n\r\n      for (let i = 0; i < this.funcionarios.length; i++) {\r\n        const ag: number = this.funcionarios[i].catDiscriminante_id;\r\n        for (let j = 0; j < this.agencias.length; j++) {\r\n          if (ag === this.agencias[j].catDiscriminante_id) {\r\n            const agNombre: string = this.agencias[j].cNombre;\r\n            this.funcionarios[i].cNombre = agNombre;\r\n\r\n            this.funcionarios[i].cNombre = agNombre;\r\n          }\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public rolesFunci: Roles[] = [];\r\n\r\n  public cargarRoles(claveFuncionario: number) {\r\n    this.membershipService.getFUsuarioRol(claveFuncionario).subscribe( rF =>  {\r\n      this.rolesFunci = rF\r\n    });\r\n    return this.rolesFunci;\r\n  }\r\n\r\n  public rolesSR: Roles[] = [];\r\n  \r\n  // Se cargan los roles del catalogo\r\n  // public getRoles(): void {\r\n  //   var hash = {}\r\n  //   this.membershipService.getRoles().subscribe( roles => {\r\n  //     this.roles = roles.filter(function(current){\r\n  //       var exists = !hash[current.rol_id] || false;\r\n  //       hash[current.rol_id] = true;\r\n  //       // console.log(\"Este es el arreglo ya formateado:=>\"+exists);\r\n  //       return exists;\r\n  //     });\r\n  //     console.log(\"Estos son los roles\");\r\n  //     console.log(this.roles);\r\n\r\n  //   });\r\n  // }\r\n\r\n  public cont: number;\r\n  public getRoles(): void {\r\n    this.membershipService.getRoles().subscribe( roles => {\r\n      this.roles = roles\r\n      console.log(this.roles);\r\n\r\n    });\r\n  }\r\n\r\n  // Obtener los roles del funcionario que se selecciona\r\n  public getFuncionarioRol(funcionario: FuncionariosData): void {\r\n    this.membershipService.getFUsuarioRol(funcionario.iClaveFuncionario).subscribe( funcionarioRol => {\r\n      this.funcionarioRol = funcionarioRol\r\n      console.log(this.funcionarioRol);\r\n      \r\n      for (let i = 0; i < this.funcionarioRol.length; i++) {\r\n        const elementFR = this.funcionarioRol[i];\r\n        for (let j = 0; j < this.roles.length; j++) {\r\n          const elementR = this.roles[j];\r\n          if ( elementFR.rol_id === elementR.rol_id) {\r\n            this.roles.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCountExp1(funcionario: FuncionariosData){\r\n    this.membershipService.getCountExp(funcionario.iClaveFuncionario,funcionario.catDiscriminante_id).subscribe(\r\n      count =>{ this.count = count\r\n        console.log(\"Tiene estos expedientes pendientes => \"+this.count);\r\n        if(count == 0){\r\n          this.valReasignarExpedientes = false;\r\n          this.valExpPendCheck = false;\r\n        }else if(count > 0){\r\n          this.valReasignarExpedientes = true;\r\n          this.valExpPendCheck = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Se cargan las agencias del catalogo\r\n  public getAgencias(): void {\r\n    this.membershipService.getAgencias().subscribe( agencias => {\r\n      this.agencias = agencias\r\n      \r\n      this.agencias.sort( (a, b) => a.cClaveDiscriminante - b.cClaveDiscriminante );\r\n      console.log(this.agencias);\r\n\r\n    });\r\n  }\r\n\r\n  public nombreAgActual: string;\r\n  public nAgActual: string[];\r\n\r\n  public getFuncionarioAgencia(funcionario:FuncionariosData):void{\r\n    this.membershipService.getFUsuarioAgencia(funcionario.catDiscriminante_id).subscribe( funciAgencia => {\r\n      this.funciAgencia = funciAgencia\r\n      this.nAgActual = this.funciAgencia.map(a => a.cNombre);\r\n      this.nombreAgActual = this.nAgActual[0];\r\n\r\n      for (let i = 0; i < this.funciAgencia.length; i++) {\r\n        if (this.funcionario.iClaveFuncionario === this.funciAgencia[i].iClaveFuncionario) {\r\n          this.funciAgencia.splice( i, 1);\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public getCatUIE(valor: number): void {\r\n    if (valor !== undefined) {\r\n      console.log(valor);\r\n      this.membershipService.getcatUIE(valor).subscribe( catUIE => {\r\n        this.catUIE = catUIE\r\n        console.log(this.catUIE);\r\n        if (this.catUIE.some(cat => cat.catUIE_id !== 0)) {\r\n          this.val = this.catUIE.map(cat => cat.catUIE_id);\r\n          console.log(this.val);\r\n        } else {\r\n          this.val = [0];\r\n          console.log(this.val);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"No se ha seleccionado agencia\");\r\n    }\r\n\r\n    if(valor !== undefined){\r\n      this.membershipService.getfunciMP(valor).subscribe( funciMP => {\r\n        this.funciMP = funciMP\r\n        console.log(funciMP);\r\n        if (this.funciMP.some(cat => cat.iClaveFuncionario !== 0)) {\r\n          this.clavedelactaul = this.funciMP.map(cat => cat.iClaveFuncionario);\r\n          console.log(this.clavedelactaul);\r\n        } else {\r\n          this.clavedelactaul = [0];\r\n          console.log(this.clavedelactaul);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Se actualiza el funcionario seleccionado\r\n  public cambioAdscripcion1(cambioAdscripcion:CambioAdscripcion) {\r\n    this.membershipService.cambioAdscripcion(cambioAdscripcion).subscribe( cambioAdscripcion => {\r\n      this.cambioAdscripcion;\r\n    });\r\n    console.log(\"Se ejecuto el cambio de adscripcion: \" + cambioAdscripcion.iClaveFuncionarioSolicitante);\r\n    \r\n    swal({\r\n      title:\"Registro exitoso...\",\r\n      text: this.titularAgencia,\r\n      type: \"success\"\r\n      }).then(() =>{\r\n      \r\n        this.router.navigate(['/pages/membership']);\r\n      });\r\n  }\r\n\r\n  public cambioEstatus(cambioEstatus: cambioEstatus){\r\n    this.membershipService.cambioEstatus(cambioEstatus).subscribe(cambioEstatus =>{\r\n      this.cambioEstatus;\r\n    });\r\n    console.log(\"se ejecuto cambio de estatus.\");\r\n    \r\n  }\r\n\r\n  public toggle(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  // Se dispara con el evento del clic cuando se selecciona un rol del catálogo\r\n  public onSelectRol(r: Roles) {\r\n    this.selectedRol = r.rol_id;\r\n    console.log(\"Se selecciono el rol => \" + this.selectedRol);\r\n    this.addRol = r;\r\n    console.log(this.addRol);\r\n\r\n    this.posicionRol = this.roles.indexOf(this.addRol);\r\n  }\r\n\r\n  // Se agrega el rol a los roles del funcionario\r\n  agregarRol() {\r\n    if (this.posicionRol > -1 && this.selectedRol !== 0) {\r\n      this.funcionarioRol.push(this.addRol);\r\n      console.log(\"Funcion agregar:\");\r\n      console.log(this.addRol);\r\n      console.log(\"Array funcionarioRol:\");\r\n      console.log(this.funcionarioRol);\r\n      this.roles.splice(this.posicionRol, 1);\r\n    } else {\r\n      console.log(\"Seleccine un rol a agregar!\");\r\n      this.toastrService.warning('Por favor seleccione un rol para agregar!', 'Atención!', {timeOut: 3000});\r\n    }\r\n    \r\n    this.posicionRol = 0;\r\n    this.selectedRol = 0;\r\n  }\r\n\r\n  public onSelectFRolF(rol: Roles) {\r\n    this.selectedRolF = rol.rol_id;\r\n    console.log(\"Se seleccion de rol del funcionario=> \" + this.selectedRolF);\r\n    this.delRol = rol;\r\n    console.log(this.delRol);\r\n\r\n    this.posicionRolF = this.funcionarioRol.indexOf(this.delRol);\r\n  }\r\n\r\n  // Se quita el rol a los roles del funcionario\r\n  public rolesEliminados: Roles[] = [];\r\n  quitarRol() {\r\n    if (this.posicionRolF > -1 && this.selectedRolF !== 0) {\r\n      if (this.delRol.esPrincipal === 1) {\r\n        console.log(\"El rol es principal\");\r\n        this.toastrService.warning('no puede eliminar el rol principal! para poder eliminar este rol seleccione otro como principal.', 'Atención!', {timeOut: 3000});\r\n      } else {\r\n        this.roles.push(this.delRol);\r\n        this.rolesEliminados.push(this.delRol);\r\n        console.log(this.rolesEliminados);\r\n        console.log(\"Funcion quitar\");\r\n        console.log(this.delRol);\r\n        this.roles.sort( (a, b) => a.rol_id - b.rol_id );\r\n        console.log(\"Array roles:\");\r\n        console.log(this.roles);\r\n        this.funcionarioRol.splice(this.posicionRolF, 1);\r\n      }\r\n    } else {\r\n      console.log(\"Seleccione el rol a eliminar!\");\r\n      this.toastrService.warning('Por favor seleccione un rol para eliminar!', 'Atención!', {timeOut: 3000});\r\n    }\r\n\r\n    this.posicionRolF = 0;\r\n    this.selectedRolF = 0;\r\n  }\r\n  \r\n  // Se abre el modal y se cargan los datos del funcionario seleccionado\r\n  public openModal(modalContent, funcionario, catUIE) {\r\n    console.log(funcionario);\r\n\r\n    // this.getAgencias();\r\n    // this.getRoles();\r\n    this.getFuncionarioRol( funcionario );\r\n    this.getFuncionarioAgencia( funcionario );\r\n    this.getCatUIE(catUIE);\r\n    this.getCountExp1(funcionario);\r\n    \r\n    if(funcionario){\r\n      const catDis: number = funcionario.catDiscriminante_id\r\n      for (let i = 0; i < this.agencias.length; i++) {\r\n        if (catDis === this.agencias[i].catDiscriminante_id) {\r\n          this.agencias.splice(i, 1);\r\n        }\r\n      }\r\n      this.funcionario = funcionario;\r\n      this.form.setValue(funcionario);\r\n    } \r\n    \r\n    this.modalRef = this.modalService.open(modalContent, { size: 'lg', container: '.app', backdrop: 'static', keyboard: false });\r\n\r\n    this.modalRef.result.then((result) => {\r\n      this.form.reset();\r\n    }, (reason) => {\r\n      this.form.reset();\r\n    });\r\n  }\r\n\r\n  // Se abre el modal y se cargan los los expedientes pendientes\r\n  openExpPend(expPendientes) {\r\n\r\n    this.getExpPendientes();\r\n    this.modalExpPend = this.modalService.open(expPendientes, { size: 'lg', container: '.app', backdrop: 'static', keyboard: false });\r\n\r\n  }\r\n\r\n  // Cerrar el modal\r\n\r\n  public p2: number;\r\n\r\n  public closeModal(){\r\n    this.modalRef.close();\r\n    this.form.reset();\r\n    this.funcionario = null;\r\n    this.rolesEliminados = [];\r\n    this.getRoles();\r\n    // this.pageRefresh();\r\n    this.selectedRol = 0;\r\n    this.selectedRolF = 0;\r\n    this.getAgencias();\r\n\r\n    this.p2 = 1;\r\n\r\n    this.pageRefresh();\r\n\r\n  }\r\n\r\n  // Cerrar el modal de expedientes pendientes\r\n  closeModalExpPend() {\r\n    this.modalExpPend.close();\r\n    this.formExpPend.reset();\r\n    // this.pageRefresh();\r\n    this.selectedExpPend = 0;\r\n    this.funcinariosAgencia = [];\r\n  }\r\n\r\n  // radioChange( e ) {\r\n  //   console.log(\"detecte el evento del radio\");\r\n  // }\r\n\r\n  // Se ejecuta el envio del formulario\r\n  public onSubmit():void {\r\n\r\n    if (this.form.valid) {\r\n\r\n      if (this.expPendientes) {\r\n        this.pendientesNum = 1;\r\n      } else {\r\n        this.pendientesNum = 0;\r\n      }\r\n\r\n      if (this.esMP) {\r\n        this.esMPNum = 1;\r\n      } else {\r\n        this.esMPNum = 0;\r\n      }\r\n\r\n      if (this.soloRoles) {\r\n        this.soloRolesNum = 1;\r\n      } else {\r\n        this.soloRolesNum = 0;\r\n      }\r\n\r\n      var iClaveFuncionarioSolicitante: number = 0;\r\n      var iClaveFuncionarioAnterior: number = 0;\r\n      var iClaveFuncionarioExp: number = 0;\r\n      var catDiscriminateSolicitante: number = 0;\r\n      var catUIE_actual: number = 0;\r\n      var catDiscriminateNuevo: number = 0;\r\n      var Justificacion: string = \"\";\r\n      var rolesFuncionario: Roles[] = [];\r\n      var rolesString: string = \"\";\r\n      var esMP: number = 0;\r\n      var soloRoles: number = 0;\r\n\r\n      iClaveFuncionarioSolicitante = this.form.value.iClaveFuncionario;\r\n      iClaveFuncionarioAnterior = this.clavedelactaul[0];\r\n      iClaveFuncionarioExp = this.form.value.archivoDigital_id;\r\n      catDiscriminateSolicitante = this.funcionario.catDiscriminante_id;\r\n      catUIE_actual = this.val[0];\r\n      catDiscriminateNuevo = this.form.value.catDiscriminante_id;\r\n      Justificacion = this.form.value.cRFC;\r\n\r\n      if(this.count >0){\r\n      var  expPendientes: number = this.pendientesNum;\r\n      }else{\r\n      var expPendientes: number = 2;\r\n      }\r\n\r\n      \r\n\r\n      rolesFuncionario = this.funcionarioRol;\r\n      for (let i = 0; i < rolesFuncionario.length; i++) {\r\n        if (rolesFuncionario[i].esPrincipal === 1) {\r\n          this.esPrincipal = rolesFuncionario[i].rol_id;\r\n        }\r\n      }\r\n\r\n      var id_roles: number[] = [];\r\n\r\n      id_roles = this.funcionarioRol.map(cat => cat.rol_id)\r\n      rolesString = String(id_roles);\r\n      //const esPrincipal: number = this.form.value.puesto_val;\r\n      esMP = this.esMPNum;\r\n      soloRoles = this.soloRolesNum;\r\n\r\n      console.log(\"iClaveFuncionarioSolicitante => \" + iClaveFuncionarioSolicitante);\r\n      console.log(\"iClaveFuncionarioAnterior => \" + iClaveFuncionarioAnterior);\r\n      console.log(\"iClaveFuncionarioExp => \" + iClaveFuncionarioExp);\r\n      console.log(\"catDiscriminante_id => \" + catDiscriminateSolicitante);\r\n      console.log(\"catUIE_id => \" + catUIE_actual);\r\n      console.log(\"catDiscriminante_idNuevo => \" + catDiscriminateNuevo);\r\n      console.log(\"Jusfificación => \" + Justificacion);\r\n      console.log(\"Expedientes pendientes => \" + expPendientes);\r\n      console.log(\"Roles del funcionario => \" + rolesFuncionario);\r\n      console.log(\"Roles en un string => \" + rolesString);\r\n      console.log(\"Es principal => \" + this.esPrincipal);\r\n\r\n      console.log(\"Se envio el formulario:\");\r\n     // console.log(this.form.value);\r\n     console.log(this.funcionarioRol);\r\n    \r\n     let cambioAdscripcion = new CambioAdscripcion( iClaveFuncionarioSolicitante,\r\n                                                    iClaveFuncionarioAnterior,\r\n                                                    iClaveFuncionarioExp,\r\n                                                    catDiscriminateSolicitante,\r\n                                                    catUIE_actual,\r\n                                                    catDiscriminateNuevo,\r\n                                                    Justificacion,\r\n                                                    expPendientes,\r\n                                                    rolesString,\r\n                                                    this.esPrincipal,\r\n                                                    esMP,\r\n                                                    soloRoles );\r\n      console.log(cambioAdscripcion);\r\n      this.cambioAdscripcion1(cambioAdscripcion);\r\n      this.form.reset({\r\n        hasSubMenu:false,\r\n        parentId:0\r\n      });\r\n    }\r\n\r\n    this.expPendientes = false;\r\n\r\n    //this.modalRef.close();\r\n    this.closeModal();\r\n    //this.pageRefresh();\r\n  } \r\n\r\n  public expPendientesLista: ExpPendientes[] = [];\r\n\r\n  // Se cargan los expedientes que se encuentran pendientes\r\n  public getExpPendientes(): void {\r\n    this.membershipService.getExpPendientes().subscribe( eP => {\r\n      this.expPendientesLista = eP\r\n      // console.log(this.expPendientesLista); \r\n\r\n      for (let i = 0; i < this.expPendientesLista.length; i++) {\r\n        const ag: number = this.expPendientesLista[i].catDiscriminante_anterior;\r\n        for (let j = 0; j < this.agencias.length; j++) {\r\n          if (ag === this.agencias[j].catDiscriminante_id) {\r\n            const agNombre: string = this.agencias[j].cNombre;\r\n            // this.expPendientesLista\r\n            // this.expPendientesLista[i].cNombre = agNombre;\r\n\r\n            this.expPendientesLista[i].cNombre = agNombre;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.expPendientesLista.length; i++) {\r\n        const f: number = this.expPendientesLista[i].iclaveFuncionario;\r\n        for (let j = 0; j < this.funcionarios.length; j++) {\r\n          if (f === this.funcionarios[j].iClaveFuncionario) {\r\n            const nombreFuncionario: string = this.funcionarios[j].cNombreFuncionario + \" \"\r\n                                              + this.funcionarios[j].cApellidoPaternoFuncionario + \" \"\r\n                                              + this.funcionarios[j].cApellidoMaternoFuncionario;\r\n            // this.expPendientesLista\r\n            // this.expPendientesLista[i].cNombre = agNombre;\r\n\r\n            this.expPendientesLista[i].nombreFuncionario = nombreFuncionario;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(this.expPendientesLista); \r\n\r\n    });\r\n  }\r\n\r\n  public funcinariosAgencia: FunciAgencia[] = [];\r\n\r\n  public getFuncionariosAg(expPend: ExpPendientes):void {\r\n    this.membershipService.getFUsuarioAgencia(expPend.catDiscriminante_anterior).subscribe( exp => {\r\n      this.funcinariosAgencia = exp\r\n      console.log(this.funcinariosAgencia);\r\n    });\r\n  }\r\n\r\n  public selectedExpPend: number = 0;\r\n  public objExpPend: ExpPendientes;\r\n\r\n  public onSelectExpPend(expPend: ExpPendientes) {\r\n    this.selectedExpPend = expPend.cambioAdscripcionExp_id;\r\n    console.log(\"Se seleccionaron los expedientes pendientes => \" + this.selectedExpPend);\r\n    this.objExpPend = expPend;\r\n    console.log(this.objExpPend);\r\n    \r\n    this.getFuncionariosAg(this.objExpPend);\r\n\r\n    // this.expPendientesLista.\r\n\r\n  }\r\n\r\n  public asignarPendientes : AsignarPendientes[];\r\n\r\n  // Se actualiza el funcionario seleccionado\r\n  public asignarExpPendientes(asignarPendientes: AsignarPendientes) {\r\n    this.membershipService.asignarExpPendientes(asignarPendientes).subscribe( asignarPendientes => {\r\n      this.asignarPendientes;\r\n    });\r\n    console.log(\"Se ejecuto el asignar expedientes: \" + asignarPendientes.iclavefuncionarioNuevo);\r\n    \r\n    swal({\r\n      title:\"Se asignaron los expedientes...\",\r\n      text: this.titularAgencia,\r\n      type: \"success\"\r\n      }).then(() =>{\r\n      \r\n        this.router.navigate(['/pages/membership']);\r\n      });\r\n    \r\n    \r\n  }\r\n\r\n  onSubmitExpPend(): void {\r\n    if (this.formExpPend.valid) {\r\n\r\n      const iclavefuncionarioAnt: number = this.formExpPend.value.iclaveFuncionarioAsign;\r\n      const iclavefuncionarioNuevo: number = this.objExpPend.iclaveFuncionario;\r\n      const catDiscriminante: number = this.objExpPend.catDiscriminante_anterior;\r\n\r\n      console.log(iclavefuncionarioAnt+\"             \"+iclavefuncionarioNuevo+\"       \"+catDiscriminante);\r\n\r\n      let asignarPendientes = new AsignarPendientes(catDiscriminante,iclavefuncionarioNuevo,iclavefuncionarioAnt);\r\n\r\n      this.asignarExpPendientes( asignarPendientes );\r\n\r\n      this.formExpPend.reset({\r\n        hasSubMenu:false,\r\n        parentId:0\r\n      });\r\n\r\n      console.log(\"se envia el formulario de expedientes pendientes validado\");\r\n      this.closeModalExpPend();\r\n      //this.pageRefresh();\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nexport class User {\r\n  id: number;\r\n  nombreUsuario: string;\r\n  contrasena: string;  \r\n  profile: UserProfile;\r\n  work: UserWork;\r\n  contacts: UserContacts;\r\n  social: UserSocial;\r\n  settings: UserSettings;\r\n  menuIds: number[];//  =>   for create ngModel multiselect\r\n}\r\n\r\nexport class UserProfile {  \r\n  name: string;\r\n  surname: string;  \r\n  birthday: Object;\r\n  gender: string;\r\n  image: string;\r\n}\r\n\r\nexport class UserWork {\r\n  company: string;\r\n  position: string;\r\n  salary: number;\r\n}\r\n\r\nexport class UserContacts{\r\n  email: string;\r\n  phone: string;\r\n  address: string;  \r\n}\r\n\r\nexport class UserSocial {\r\n  facebook: string;\r\n  twitter: string;\r\n  google: string;\r\n}\r\n\r\nexport class UserSettings{\r\n  isActive: boolean;\r\n  isDeleted: boolean;\r\n  registrationDate: Date;\r\n  joinedDate: Date;\r\n}\r\n\r\n// Mostrar resultados de la busqueda de funcionarios. (tabla Funcionario)\r\nexport class FuncionariosData {\r\n  iClaveFuncionario: number;\r\n  cNombreFuncionario: string;\r\n  cApellidoPaternoFuncionario: string;\r\n  cApellidoMaternoFuncionario: string;\r\n  cSexo: string;\r\n  cRFC: string;\r\n  cCURP: string;\r\n  dFechaNacimiento: Date;\r\n  cEmail: string;\r\n  cCedula: string;\r\n  iClaveFuncionarioJefe: number;\r\n  especialidad_val: number;\r\n  puesto_val: number;\r\n  jerarquiaOrganizacional_id: number;\r\n  dcCargaTrabajo: number;\r\n  tipoEspecialidad_val: number;\r\n  bEsPar: number;\r\n  cNumeroEmpleado: number;\r\n  catDiscriminante_id: number;\r\n  dFechaIngreso: Date;\r\n  archivoDigital_id: number;\r\n  catUIE_id: number;\r\n  catAreasNegocio_id: number;\r\n  esMP: number;\r\n  cNumeroCertificado: string;\r\n  bEsActivo: number;\r\n  cClaveUsuario: string;\r\n  cNombre: string;\r\n  usuario: string[];\r\n  numeroExpediente: number[];\r\n}\r\n\r\n// Datos de la agencia. (tabla CatDiscriminante)\r\nexport class FuncionarioAgencia {\r\n  catDiscriminante: number;\r\n  claveDiscriminante: number;\r\n  nombreAgencia: string;\r\n}\r\n\r\n// Datos de usuario especifico. (tabla Usuario)\r\nexport class FuncionarioUsuario {\r\n  usuarioId: number;\r\n  claveUsuario: string;\r\n  claveFuncionario:number;\r\n  esActivo: number;\r\n}\r\n\r\n// Roles de usuario especifico. (tabla UsuarioRol)\r\n// export class FuncionarioUsuarioRol {\r\n//   Usuario_id: number;\r\n//   rol_id: number;\r\n//   dFechaInicio: Date;\r\n//   dFechaFin: Date;\r\n//   esPrincipal: number;\r\n// }\r\n\r\n// Catálogo de agencias. (tabla CatDiscriminante)\r\nexport class Agencias {\r\n  catDiscriminante_id: number;\r\n  catDistrito_id: number;\r\n  cClaveDiscriminante: number;\r\n  cNombre: string;\r\n  iTipo: number;\r\n  catDelegacion_id: number;\r\n}\r\n\r\nexport class catUIE {\r\n  catUIE_id: number;\r\n  cClaveUIE: string;\r\n  cNombreUIE:string;\r\n  cAcronimo: string;\r\n  catDiscriminante_id: number;\r\n}\r\n\r\n// Catálogo de roles (tabla Rol)\r\nexport class Roles {\r\n  rol_id: number;\r\n  cNombreRol: string;\r\n  cDescripcionRol: string;\r\n  bEsActivo: number;\r\n  confInstitucion_id: number;\r\n  jerarquiaOrganizacional_id: number;\r\n  rolPadre_id: number;\r\n  esPrincipal: number;\r\n}\r\n\r\n// Roles de usuario especifico. (tabla UsuarioRol)\r\nexport class FuncionarioUsuarioRol {\r\n  usuario_id: number;\r\n  cClaveUsuario: string;\r\n  cPalabraSecreta: string;\r\n  iClaveFuncionario: number;\r\n  password: string;\r\n  cllave: string;\r\n  iSesion: number;\r\n  iIntentos:number;\r\n  cIP: string;\r\n  bEsActivo: number;\r\n  idSesionServertring;\r\n  usuarioRol: string[];\r\n}\r\n\r\nexport class FunciAgencia {\r\n  iClaveFuncionario: number;\r\n  cNombreFuncionario: string;\r\n  cApellidoPaternoFuncionario: string;\r\n  cAPellidoMaternoFuncionario: string;\r\n  cNombre: string;\r\n  EsMP: number;\r\n}\r\n\r\n\r\n\r\nexport class CambioAdscripcion{\r\n constructor(\r\n   public iClaveFuncionarioSolicitante: number,\r\n   public iClaveFuncionarioAnterior: number,\r\n   public iClaveFuncionarioExp: number,\r\n   public catDiscriminateSolicitante: number,\r\n   public catUIE_actual: number,\r\n   public catDiscriminateNuevo: number,\r\n   public Justificacion: string,\r\n   public pendientes: number,\r\n   public rolesFuncionario: string,\r\n   public esPrincipal: number,\r\n   public esMP: number,\r\n   public funcion_roles: number\r\n  ){}\r\n}\r\n\r\nexport class ExpPendientes {\r\n  public cambioAdscripcionExp_id: number;\r\n  public iclaveFuncionario: number;\r\n  public catDiscriminante_anterior: number;\r\n  public catDiscriminante_asignado: number;\r\n  public dFechaCreacion: Date;\r\n  public dFechaModificacion: Date;\r\n  public EsMP: number;\r\n  public bAsignados: number;\r\n  public cNombre: string;\r\n  public nombreFuncionario: string;\r\n}\r\n\r\nexport class AsignarPendientes {\r\n  constructor(\r\n    public catDiscriminante: number,\r\n    public iclavefuncionarioAnt: number,\r\n    public iclavefuncionarioNuevo: number,\r\n    \r\n   ){}\r\n}\r\n\r\nexport class cambioEstatus{\r\n  constructor(\r\n    public iclavefuncionario:number,\r\n    public estatus:number,\r\n    public justificacion:string,\r\n  ){}\r\n}\r\n\r\n// export class ExpPendientesTabla {\r\n//   public iclaveFuncionario: number;\r\n//   public catDis_ant: string\r\n// }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InMemoryWebApiModule, InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { MembershipComponent } from './membership.component';\r\n//import { MembershipData } from './membership.data';\r\n\r\nexport const routes = [\r\n  { path: '', component: MembershipComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    //InMemoryWebApiModule.forRoot(MembershipData, { delay: 0 }),\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MultiselectDropdownModule,\r\n    NgxPaginationModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    MembershipComponent\r\n  ]\r\n})\r\nexport class MembershipModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User, FuncionariosData, Roles, Agencias, FuncionarioUsuarioRol, FunciAgencia, catUIE , CambioAdscripcion, ExpPendientes, AsignarPendientes , cambioEstatus} from './membership.model';\r\n\r\n@Injectable()\r\nexport class MembershipService {\r\n\r\n    // public general = \"http://localhost:55244/api\";\r\n    public general = \"http://192.168.105.53:55245/api\";\r\n    public url2 = this.general + \"/funcionarios\";\r\n    public url3 = this.general + \"/catDiscriminantes\";\r\n    public url4 = this.general + \"/Roles\";\r\n    public url5 = this.general + \"/RolFunci\";\r\n    public url6 = this.general + \"/FunciAgencia\";\r\n    public url7 = this.general + \"/catUEI\";\r\n    public url8 = this.general + \"/funciActual\";\r\n    public url9 = this.general + \"/CambioAD/cambioADS\";\r\n    public url10 = this.general + \"/cambioAdscripcionExps\";\r\n    public url11 = this.general + \"/CambioExp\";\r\n    public url12 = this.general + \"/cambiarEstatus\";\r\n    public url13 = this.general + \"/CountExp/countExp\";\r\n    private headers;\r\n\r\n    constructor(public http: HttpClient) {\r\n        this.headers = new HttpHeaders({ 'Content-Type': 'application/json' }); \r\n     }\r\n\r\n    getFuncionarios(): Observable<FuncionariosData[]> {\r\n        return this.http.get<FuncionariosData[]>(this.url2);\r\n    }\r\n\r\n    getAgencias(): Observable<Agencias[]> {\r\n        return this.http.get<Agencias[]>(this.url3);\r\n    }\r\n\r\n    getFUsuarioAgencia( catdis: number ) : Observable<FunciAgencia[]> {\r\n        return this.http.get<FunciAgencia[]>(this.url6 + \"?catdis=\" + catdis);\r\n    }\r\n\r\n    getRoles(): Observable<Roles[]> {\r\n        return this.http.get<Roles[]>(this.url4);\r\n    }\r\n\r\n    getFUsuarioRol( id: number ): Observable<Roles[]> {\r\n        return this.http.get<Roles[]>(this.url5 + \"?iClaveFuncionario=\" + id);\r\n    }\r\n\r\n    getCountExp(iclave: number,catdis:number):Observable<any>{\r\n        return this.http.get(this.url13+\"?iclavefuncionario=\"+iclave+\"+&catdiscriminate=\"+catdis);\r\n    }\r\n\r\n    getcatUIE( catdis: number ): Observable<catUIE[]> {\r\n        //console.log(catdis);\r\n        return this.http.get<catUIE[]>(this.url7 + \"?catdis=\" + catdis);\r\n    }\r\n\r\n    getfunciMP(catdis:number): Observable<FuncionariosData[]>{\r\n        return this.http.get<FuncionariosData[]>(this.url8 + \"?catdis=\" + catdis);\r\n    }\r\n\r\n    updateFuncionario( funcionario:FuncionariosData){\r\n        return this.http.put(this.url2, funcionario);\r\n    }\r\n\r\n    cambioAdscripcion(cambioAdscripcion:CambioAdscripcion){\r\n        const newpres = JSON.stringify(cambioAdscripcion);\r\n        console.log(newpres);\r\n        return this.http.post(this.url9, newpres ,{headers: this.headers});\r\n    }\r\n\r\n    cambioEstatus(cambioEstatus:cambioEstatus){\r\n        const estatus = JSON.stringify(cambioEstatus);\r\n        return this.http.post(this.url12,estatus,{headers: this.headers});\r\n    }\r\n\r\n    getExpPendientes(): Observable<ExpPendientes[]> {\r\n        return this.http.get<ExpPendientes[]>(this.url10);\r\n    }\r\n\r\n    asignarExpPendientes(asignarExpPendientes:AsignarPendientes){\r\n        const newExp = JSON.stringify(asignarExpPendientes);\r\n        console.log(newExp);\r\n        return this.http.post(this.url11, newExp ,{headers: this.headers});\r\n    }\r\n\r\n    \r\n} \r\n"],"sourceRoot":""}